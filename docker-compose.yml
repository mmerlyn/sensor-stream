version: '3.8' 
 
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1 
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - sensor-network
 
  kafka: 
    image: confluentinc/cp-kafka:7.6.1 
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper 
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - sensor-network
 
  postgres:
    image: postgres:15 
    hostname: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: sensor
      POSTGRES_USER: sensor_user
      POSTGRES_PASSWORD: sensor_pass
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - sensor-network
 
  producer:
    build:
      context: ./producer
    container_name: producer
    depends_on:
      - kafka 
    networks:
      - sensor-network
 
  spark: 
    image: bitnami/spark:3.4.1 
    container_name: spark
    hostname: spark 
    ports:
      - "45040:4040" 
    volumes:
      - ./spark-app/spark_stream.py:/app/spark_stream.py
      - ./jars/postgresql-42.7.4.jar:/opt/bitnami/spark/jars/postgresql-42.7.4.jar
    command: >
      bash -c "spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.1 /app/spark_stream.py"
    depends_on:
      - kafka      
      - postgres   
    networks:
      - sensor-network
    environment: 
       - POSTGRES_USER=sensor_user
       - POSTGRES_PASSWORD=sensor_pass
       - POSTGRES_DB=sensor
       - POSTGRES_HOST=postgres 
       - KAFKA_BROKER=kafka:9092
  api:
    build:
      context: ./api
    container_name: sensor-api
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=sensor
      - POSTGRES_USER=sensor_user
      - POSTGRES_PASSWORD=sensor_pass
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - sensor-network
  
  # react:
  #   build:
  #     context: ./frontend
  #   container_name: sensor-ui
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - api
  #   networks:
  #     - sensor-network
 
networks:
  sensor-network:
    name: sensor-network
    driver: bridge